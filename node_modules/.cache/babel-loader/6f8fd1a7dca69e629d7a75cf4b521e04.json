{"ast":null,"code":"import _classCallCheck from \"/Users/loringmuller/Desktop/UCLA-Class-Homework/Clicky-Game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/loringmuller/Desktop/UCLA-Class-Homework/Clicky-Game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/loringmuller/Desktop/UCLA-Class-Homework/Clicky-Game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/loringmuller/Desktop/UCLA-Class-Homework/Clicky-Game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/loringmuller/Desktop/UCLA-Class-Homework/Clicky-Game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/loringmuller/Desktop/UCLA-Class-Homework/Clicky-Game/src/App.js\";\n// import React from \"react\";\nimport React, { PureComponent } from 'react';\nimport Header from './components/Header/header';\nimport Card from './components/Card/Card';\nimport GameOver from './components/Card/GameOver';\nimport './styles/main.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(App, _PureComponent);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isFlipped: Array(16).fill(false),\n      shuffledCard: App.duplicateCard().sort(function () {\n        return Math.random() - 0.5;\n      }),\n      clickCount: 1,\n      prevSelectedCard: -1,\n      prevCardId: -1\n    };\n\n    _this.handleClick = function (event) {\n      event.preventDefault();\n      var cardId = event.target.id;\n\n      var newFlipps = _this.state.isFlipped.slice();\n\n      _this.setState({\n        prevSelectedCard: _this.state.shuffledCard[cardId],\n        prevCardId: cardId\n      });\n\n      if (newFlipps[cardId] === false) {\n        newFlipps[cardId] = !newFlipps[cardId];\n\n        _this.setState(function (prevState) {\n          return {\n            isFlipped: newFlipps,\n            clickCount: _this.state.clickCount + 1\n          };\n        });\n\n        if (_this.state.clickCount === 2) {\n          _this.setState({\n            clickCount: 1\n          });\n\n          var prevCardId = _this.state.prevCardId;\n          var newCard = _this.state.shuffledCard[cardId];\n          var previousCard = _this.state.prevSelectedCard;\n\n          _this.isCardMatch(previousCard, newCard, prevCardId, cardId);\n        }\n      }\n    };\n\n    _this.isCardMatch = function (card1, card2, card1Id, card2Id) {\n      if (card1 === card2) {\n        var hideCard = _this.state.shuffledCard.slice();\n\n        hideCard[card1Id] = -1;\n        hideCard[card2Id] = -1;\n        setTimeout(function () {\n          _this.setState(function (prevState) {\n            return {\n              shuffledCard: hideCard\n            };\n          });\n        }, 1000);\n      } else {\n        var flipBack = _this.state.isFlipped.slice();\n\n        flipBack[card1Id] = false;\n        flipBack[card2Id] = false;\n        setTimeout(function () {\n          _this.setState(function (prevState) {\n            return {\n              isFlipped: flipBack\n            };\n          });\n        }, 1000);\n      }\n    };\n\n    _this.restartGame = function () {\n      _this.setState({\n        isFlipped: Array(16).fill(false),\n        shuffledCard: App.duplicateCard().sort(function () {\n          return Math.random() - 0.5;\n        }),\n        clickCount: 1,\n        prevSelectedCard: -1,\n        prevCardId: -1\n      });\n    };\n\n    _this.isGameOver = function () {\n      return _this.state.isFlipped.every(function (element, index, array) {\n        return element !== false;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Header, {\n        restartGame: this.restartGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), this.isGameOver() ? React.createElement(GameOver, {\n        restartGame: this.restartGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        className: \"grid-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.shuffledCard.map(function (cardNumber, index) {\n        return React.createElement(Card, {\n          key: index,\n          id: index,\n          cardNumber: cardNumber,\n          isFlipped: _this2.state.isFlipped[index],\n          handleClick: _this2.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(PureComponent);\n\nApp.duplicateCard = function () {\n  return [0, 1, 2, 3, 4, 5, 6, 7].reduce(function (preValue, current, index, array) {\n    return preValue.concat([current, current]);\n  }, []);\n};\n\nexport default App; // function App() {\n//   return (\n//     <Wrapper>\n//       {/* <Title>Friends List</Title> */}\n//       <FriendCard\n//         name={friends[0].name}\n//         image={friends[0].image}\n//       />\n//       <FriendCard\n//         name={friends[1].name}\n//         image={friends[1].image}\n//       />\n//       <FriendCard\n//         name={friends[2].name}\n//         image={friends[2].image}\n//       />\n//        <FriendCard\n//         name={friends[3].name}\n//         image={friends[3].image}\n//       />\n//        <FriendCard\n//         name={friends[4].name}\n//         image={friends[4].image}\n//       />\n//        <FriendCard\n//         name={friends[5].name}\n//         image={friends[5].image}\n//       /> \n//        <FriendCard\n//         name={friends[6].name}\n//         image={friends[6].image}\n//       />\n//        <FriendCard\n//         name={friends[7].name}\n//         image={friends[7].image}\n//       />\n//        <FriendCard\n//         name={friends[8].name}\n//         image={friends[8].image}\n//       />\n//     </Wrapper>\n//   );\n// }\n// export default App;","map":{"version":3,"sources":["/Users/loringmuller/Desktop/UCLA-Class-Homework/Clicky-Game/src/App.js"],"names":["React","PureComponent","Header","Card","GameOver","App","state","isFlipped","Array","fill","shuffledCard","duplicateCard","sort","Math","random","clickCount","prevSelectedCard","prevCardId","handleClick","event","preventDefault","cardId","target","id","newFlipps","slice","setState","prevState","newCard","previousCard","isCardMatch","card1","card2","card1Id","card2Id","hideCard","setTimeout","flipBack","restartGame","isGameOver","every","element","index","array","map","cardNumber","reduce","preValue","current","concat"],"mappings":"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","sourcesContent":["// import React from \"react\";\nimport React, { PureComponent } from 'react';\nimport Header from './components/Header/header';\nimport Card from './components/Card/Card';\nimport GameOver from './components/Card/GameOver';\nimport './styles/main.css';\n\nclass App extends PureComponent {\n\n  state = { \n    isFlipped: Array(16).fill(false),\n    shuffledCard: App.duplicateCard().sort(() => Math.random() - 0.5),\n    clickCount: 1,\n    prevSelectedCard: -1,\n    prevCardId: -1\n  };\n\n  static duplicateCard = () => {\n    return [0,1,2,3,4,5,6,7].reduce((preValue, current, index, array) => {\n      return preValue.concat([current, current])\n    },[]);\n  };\n\n  handleClick = event => {\n    event.preventDefault();\n    const cardId = event.target.id;\n    const newFlipps = this.state.isFlipped.slice();\n    this.setState({\n        prevSelectedCard: this.state.shuffledCard[cardId],\n        prevCardId: cardId\n    });\n\n    if (newFlipps[cardId] === false) {\n      newFlipps[cardId] = !newFlipps[cardId];\n      this.setState(prevState => ({ \n        isFlipped: newFlipps,\n        clickCount: this.state.clickCount + 1\n      }));\n\n      if (this.state.clickCount === 2) {\n        this.setState({ clickCount: 1 });\n        const prevCardId = this.state.prevCardId;\n        const newCard = this.state.shuffledCard[cardId];\n        const previousCard = this.state.prevSelectedCard;\n\n        this.isCardMatch(previousCard, newCard, prevCardId, cardId);\n      }\n    }\n  };\n\n  isCardMatch = (card1, card2, card1Id, card2Id) => {\n    if (card1 === card2) {\n      const hideCard = this.state.shuffledCard.slice();\n      hideCard[card1Id] = -1;\n      hideCard[card2Id] = -1;\n      setTimeout(() => {\n        this.setState(prevState => ({\n          shuffledCard: hideCard\n        }))\n      }, 1000);\n    } else {\n      const flipBack = this.state.isFlipped.slice();\n      flipBack[card1Id] = false;\n      flipBack[card2Id] = false;\n      setTimeout(() => {\n        this.setState(prevState => ({ isFlipped: flipBack }));\n      }, 1000);\n    }\n  };\n\n  restartGame = () => {\n    this.setState({\n      isFlipped: Array(16).fill(false),\n      shuffledCard: App.duplicateCard().sort(() => Math.random() - 0.5),\n      clickCount: 1,\n      prevSelectedCard: -1,\n      prevCardId: -1\n    });\n  };\n\n  isGameOver = () => {\n    return this.state.isFlipped.every((element, index, array) => element !== false);\n  };\n\n  render() {\n    return (\n     <div>\n       <Header restartGame={this.restartGame} />\n       { this.isGameOver() ? <GameOver restartGame={this.restartGame} /> :\n       <div className=\"grid-container\">\n          {\n            this.state.shuffledCard.map((cardNumber, index) => \n              <Card\n                key={index} \n                id={index} \n                cardNumber={cardNumber} \n                isFlipped={this.state.isFlipped[index]} \n                handleClick={this.handleClick}     \n              />\n            )\n          }\n        </div>\n       }\n     </div>\n    );\n  }\n}\n\nexport default App;\n\n// function App() {\n//   return (\n//     <Wrapper>\n//       {/* <Title>Friends List</Title> */}\n//       <FriendCard\n//         name={friends[0].name}\n//         image={friends[0].image}\n//       />\n//       <FriendCard\n//         name={friends[1].name}\n//         image={friends[1].image}\n//       />\n//       <FriendCard\n//         name={friends[2].name}\n//         image={friends[2].image}\n//       />\n//        <FriendCard\n//         name={friends[3].name}\n//         image={friends[3].image}\n//       />\n//        <FriendCard\n//         name={friends[4].name}\n//         image={friends[4].image}\n//       />\n//        <FriendCard\n//         name={friends[5].name}\n//         image={friends[5].image}\n//       /> \n//        <FriendCard\n//         name={friends[6].name}\n//         image={friends[6].image}\n//       />\n//        <FriendCard\n//         name={friends[7].name}\n//         image={friends[7].image}\n//       />\n//        <FriendCard\n//         name={friends[8].name}\n//         image={friends[8].image}\n//       />\n//     </Wrapper>\n//   );\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}